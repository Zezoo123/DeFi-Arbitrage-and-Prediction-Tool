/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockUniswapRouter,
  MockUniswapRouterInterface,
} from "../../contracts/MockUniswapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "dai",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initalExchagneRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initalExchagneRate",
        type: "uint256",
      },
    ],
    name: "setExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610de2380380610de28339818101604052810190610032919061015b565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050506101ae565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f2826100c7565b9050919050565b610102816100e7565b811461010d57600080fd5b50565b60008151905061011f816100f9565b92915050565b6000819050919050565b61013881610125565b811461014357600080fd5b50565b6000815190506101558161012f565b92915050565b600080600060608486031215610174576101736100c2565b5b600061018286828701610110565b935050602061019386828701610110565b92505060406101a486828701610146565b9150509250925092565b610c25806101bd6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806338ed17391461005c5780633ba0b9a91461008c578063ad5c4648146100aa578063db068e0e146100c8578063e0bab4c4146100e4575b600080fd5b610076600480360381019061007191906105ba565b610102565b6040516100839190610712565b60405180910390f35b61009461045d565b6040516100a19190610743565b60405180910390f35b6100b2610463565b6040516100bf919061076d565b60405180910390f35b6100e260048036038101906100dd9190610788565b610487565b005b6100ec610491565b6040516100f9919061076d565b60405180910390f35b606042821015610147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013e90610812565b60405180910390fd5b6002858590501461018d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610184906108a4565b60405180910390fd5b6000858560008181106101a3576101a26108c4565b5b90506020020160208101906101b891906108f3565b90506000868660018181106101d0576101cf6108c4565b5b90506020020160208101906101e591906108f3565b905060008273ffffffffffffffffffffffffffffffffffffffff166323b872dd33308d6040518463ffffffff1660e01b815260040161022693929190610920565b6020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061098f565b9050806102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290610a08565b60405180910390fd5b600060028b6102ba9190610a57565b9050898110156102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690610b0b565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b815260040161033a929190610b2b565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d919061098f565b9150816103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610ba0565b60405180910390fd5b8888905067ffffffffffffffff8111156103dc576103db610bc0565b5b60405190808252806020026020018201604052801561040a5781602001602082028036833780820191505090505b5094508a85600081518110610422576104216108c4565b5b6020026020010181815250508085600181518110610443576104426108c4565b5b602002602001018181525050505050509695505050505050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600080fd5b6000819050919050565b6104d4816104c1565b81146104df57600080fd5b50565b6000813590506104f1816104cb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261051c5761051b6104f7565b5b8235905067ffffffffffffffff811115610539576105386104fc565b5b60208301915083602082028301111561055557610554610501565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105878261055c565b9050919050565b6105978161057c565b81146105a257600080fd5b50565b6000813590506105b48161058e565b92915050565b60008060008060008060a087890312156105d7576105d66104b7565b5b60006105e589828a016104e2565b96505060206105f689828a016104e2565b955050604087013567ffffffffffffffff811115610617576106166104bc565b5b61062389828a01610506565b9450945050606061063689828a016105a5565b925050608061064789828a016104e2565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610689816104c1565b82525050565b600061069b8383610680565b60208301905092915050565b6000602082019050919050565b60006106bf82610654565b6106c9818561065f565b93506106d483610670565b8060005b838110156107055781516106ec888261068f565b97506106f7836106a7565b9250506001810190506106d8565b5085935050505092915050565b6000602082019050818103600083015261072c81846106b4565b905092915050565b61073d816104c1565b82525050565b60006020820190506107586000830184610734565b92915050565b6107678161057c565b82525050565b6000602082019050610782600083018461075e565b92915050565b60006020828403121561079e5761079d6104b7565b5b60006107ac848285016104e2565b91505092915050565b600082825260208201905092915050565b7f5472616e73616374696f6e206578706972656400000000000000000000000000600082015250565b60006107fc6013836107b5565b9150610807826107c6565b602082019050919050565b6000602082019050818103600083015261082b816107ef565b9050919050565b7f4f6e6c792074776f2d746f6b656e2073776170732061726520737570706f727460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061088e6022836107b5565b915061089982610832565b604082019050919050565b600060208201905081810360008301526108bd81610881565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610909576109086104b7565b5b6000610917848285016105a5565b91505092915050565b6000606082019050610935600083018661075e565b610942602083018561075e565b61094f6040830184610734565b949350505050565b60008115159050919050565b61096c81610957565b811461097757600080fd5b50565b60008151905061098981610963565b92915050565b6000602082840312156109a5576109a46104b7565b5b60006109b38482850161097a565b91505092915050565b7f5472616e73666572206f6620746f6b656e496e206661696c6564000000000000600082015250565b60006109f2601a836107b5565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a62826104c1565b9150610a6d836104c1565b9250828202610a7b816104c1565b91508282048414831517610a9257610a91610a28565b5b5092915050565b7f556e69737761705632526f757465723a20494e53554646494349454e545f4f5560008201527f545055545f414d4f554e54000000000000000000000000000000000000000000602082015250565b6000610af5602b836107b5565b9150610b0082610a99565b604082019050919050565b60006020820190508181036000830152610b2481610ae8565b9050919050565b6000604082019050610b40600083018561075e565b610b4d6020830184610734565b9392505050565b7f5472616e73666572206f6620746f6b656e4f7574206661696c65640000000000600082015250565b6000610b8a601b836107b5565b9150610b9582610b54565b602082019050919050565b60006020820190508181036000830152610bb981610b7d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212201f5db7f329c86077dafd4bb7fe258c8e3d14ac6ca125be64e49ea598b5ea37dc64736f6c634300081b0033";

type MockUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapRouter__factory extends ContractFactory {
  constructor(...args: MockUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    weth: AddressLike,
    dai: AddressLike,
    initalExchagneRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      weth,
      dai,
      initalExchagneRate,
      overrides || {}
    );
  }
  override deploy(
    weth: AddressLike,
    dai: AddressLike,
    initalExchagneRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      weth,
      dai,
      initalExchagneRate,
      overrides || {}
    ) as Promise<
      MockUniswapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUniswapRouter__factory {
    return super.connect(runner) as MockUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapRouterInterface {
    return new Interface(_abi) as MockUniswapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapRouter {
    return new Contract(address, _abi, runner) as unknown as MockUniswapRouter;
  }
}
